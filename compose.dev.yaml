version: '3.8'

services:
  web:
    image: nginx:latest
    volumes:
      - ./:/var/www
      - ./docker/development/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "${NGINX_PORT:-5001}:80"
    networks:
      - laravel-network
    depends_on:
      php-fpm:
        condition: service_started

  php-fpm:
    build:
      context: .
      dockerfile: docker/common/php-fpm/Dockerfile
      args:
        PHP_VERSION: 8.2
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    env_file: .env
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      - ./:/var/www
    networks:
      - laravel-network
    depends_on:
      db:
        condition: service_healthy

  workspace:
    build:
      context: .
      dockerfile: docker/development/workspace/Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    env_file: .env
    tty: true
    stdin_open: true
    volumes:
      - ./:/var/www
    networks:
      - laravel-network

  db:
    image: mysql:8
    restart: unless-stopped
    ports:
      - "${DB_PORT:-3307}:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - laravel-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 5

  redis:
    image: redis:alpine
    networks:
      - laravel-network

networks:
  laravel-network:

volumes:
  mysql-data:
